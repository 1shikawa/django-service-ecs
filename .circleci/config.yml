version: 2.1
jobs:
  build_test:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - run:
          name: docker-compose build
          command: docker-compose build
      - run:
          name: docker-compose up
          command: docker-compose up -d
      - run:
          name: sleep for waiting launch db
          command: sleep 10
      - run:
          name: "install pipenv"
          command: |
            docker-compose run django-service pip install pipenv
            docker-compose run django-service pipenv install
      - save_cache:
          paths:
            - ".venv"
            - "/usr/local/bin"
            - "/usr/local/lib/python3.7/site-packages"
      # - run:
      #     name: "before_test: migrate"
      #     command: docker-compose run django-service python manage.py migrate
      # - run:
      #     command: |
      #       docker-compose run django-service pipenv run "python manage.py test"
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
      - run:
          name: docker-compose down
          command: docker-compose down

  build_image:
    docker:
      - image: docker:18.09.0
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws cli
          command: |
            apk add --no-cache --update py-pip
            pip install awscli
      - run:
          name: build image
          command: |
            $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
            docker build -t ${ECR_DOMAIN}/django:$CIRCLE_SHA1 -t ${ECR_DOMAIN}/django:latest ./django_service
            docker build -t ${ECR_DOMAIN}/nginx:$CIRCLE_SHA1 -t ${ECR_DOMAIN}/nginx:latest ./nginx
      - run:
          name: Push Docker Image
          command: |
            docker push ${ECR_DOMAIN}/django:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN}/django:latest
            docker push ${ECR_DOMAIN}/nginx:$CIRCLE_SHA1
            docker push ${ECR_DOMAIN}/nginx:latest

  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - run:
          name: install aws cli
          command: |
            sudo pip install awscli
      - run:
          name: download jq
          command: |
            wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
            mv jq-linux64 jq
      - run:
          name: Setup common environment variables
          command: |
            echo 'export ECS_CLUSTER_NAME="${AWS_RESOURCE_NAME_PREFIX}-cluster"' >> $BASH_ENV
            echo 'export ECS_SERVICE_NAME="${AWS_RESOURCE_NAME_PREFIX}-service"' >> $BASH_ENV
            echo 'export FULL_IMAGE_NAME="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${AWS_RESOURCE_NAME_PREFIX}:${CIRCLE_SHA1}"' >> $BASH_ENV
      - run:
          name: login
          command: |
            $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
      - run:
          name: deploy
          command: |
            aws ecs describe-task-definition --task-definition django-service | 
            jq '.taskDefinition | { containerDefinitions: .containerDefinitions, volumes: .volumes }' > definition.json
            aws ecs register-task-definition --family django-service --cli-input-json file://definition.json
            aws ecs update-service --cluster django-cluster --service django-service --task-definition django-service
      - run:
          name: migration
          command: |
            aws ecs run-task --cluster django-cluster --task-definition django-migrate


workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build_test
      - build_image:
          requires:
            - build_test
#      #          filters:
#      #            branches:
#      #              only:master
      - deploy:
          requires:
            - build_image